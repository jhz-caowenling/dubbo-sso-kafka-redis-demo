<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd   
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

	<!-- 注解事务支持 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 事务定义 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 切面相关配置 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 业务层拦截器配置 -->
	<bean name="txCheckInterceptor" class="tech.lihx.demo.core.cache.service.TxCheckInterceptor">
		<property name="txAdvice" ref="txAdvice" />
	</bean>
	<bean name="cacheInterceptor" class="tech.lihx.demo.core.cache.service.CacheInterceptor" />

	<!-- AOP相关配置 -->
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="execution(* tech.lihx.demo.user.service.impl..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut" />
		<aop:advisor advice-ref="cacheInterceptor" pointcut-ref="servicePointcut" />
		<aop:advisor advice-ref="txCheckInterceptor" pointcut-ref="servicePointcut" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="modulePointcut" expression="execution(* tech.lihx.demo.user.module..*.*(..))" />
		<aop:pointcut id="endpointPointcut" expression="execution(* tech.lihx.demo.user.endpoint..*.*(..))"  />
		<aop:advisor advice-ref="moduleExceptionInterceptor" pointcut-ref="modulePointcut" />
		<aop:advisor advice-ref="endpointExceptionInterceptor" pointcut-ref="endpointPointcut" />
	</aop:config>
	
	<!-- 服务层拦截器配置 -->
	<bean name="endpointExceptionInterceptor" class="tech.lihx.demo.core.common.interceptor.EndpointExceptionInterceptor">
		<property name="mail" ref="exceptionMail" />
	</bean>
	<bean name="moduleExceptionInterceptor" class="tech.lihx.demo.core.common.interceptor.ModuleExceptionInterceptor">
		<property name="mail" ref="exceptionMail" />
	</bean>
	
	<!-- 异常时邮件通知 -->
	<bean id="exceptionMail" class="tech.lihx.demo.core.common.exception.support.ExceptionMail">
		<property name="users">
			<list>
				<value>lihuaxin@ren001.com</value>
			</list>
		</property>
	</bean>
	
</beans>
